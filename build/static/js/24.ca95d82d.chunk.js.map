{"version":3,"sources":["Main/Account/Withdrawal.js"],"names":["Withdrawal","getAccount","useLocalStorage","useBlockchain","contract","active","useState","walletAddress","setWalletAddress","BigNumber","from","withdrawableBalance","setWithdrawableBalance","accountID","useEffect","fn","getUser","user","addr","withdawable","result","amount","withdraw","window","alert","className","Header","Title","as","Body","Group","Label","Control","type","value","parseFloat","ethers","utils","formatEther","toFixed","onChange","e","target","id","readOnly","onClick"],"mappings":"8OA+DeA,UAzDI,WACf,IAAQC,EAAeC,YAAgB,IAA/BD,WACR,EAA+BE,YAAc,IAA7C,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsDF,mBAASG,IAAUC,KAAK,MAA9E,mBAAOC,EAAP,KAA4BC,EAA5B,KAEMC,EAAYZ,IAElBa,qBAAU,WACN,GAAKT,EAAL,CACA,IAAMU,EAAE,iDAAG,gHACYX,EAASY,QAAQP,IAAUC,KAAKG,IAD5C,cACDI,EADC,OAEPT,EAAiBS,EAAKC,MAFf,SAGcd,EAASe,YAAYV,IAAUC,KAAKG,IAHlD,OAGDO,EAHC,OAIPR,EAAuBQ,EAAO,IAJvB,2CAAH,qDAMRL,OACD,CAACX,EAAUH,EAAYI,EAAQQ,IAElC,IAKqBQ,EALfC,EAAQ,iDAAG,wGACPlB,EAASkB,SAAST,GADX,OAEbU,OAAOC,MAAM,YAFA,2CAAH,qDASd,OACI,mCACI,qBAAKC,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,CAAYC,GAAG,KAAf,iCAEJ,cAAC,IAAKC,KAAN,UACI,eAAC,IAAD,WACI,eAAC,IAAKC,MAAN,WACI,cAAC,IAAKC,MAAN,gCACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,OAhBrCb,EAgBwDV,EAflEwB,WAAWC,IAAOC,MAAMC,YAAYjB,IAASkB,QAAQ,IAemCC,SAAU,SAAAC,GAAC,OAAE7B,EAAuB6B,EAAEC,OAAOR,QAAQS,GAAG,kBAAkBC,UAAQ,OAEzJ,eAAC,IAAKd,MAAN,WACI,cAAC,IAAKC,MAAN,6BACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOC,MAAO3B,EAAeiC,SAAU,SAAAC,GAAC,OAAEjC,EAAiBiC,EAAEC,OAAOR,QAAQS,GAAG,gBAAgBC,UAAQ,OAG9H,uBAAOC,QAASvB,EAAUW,KAAK,SAASR,UAAU,iCAAiCS,MAAM","file":"static/js/24.ca95d82d.chunk.js","sourcesContent":["import { BigNumber, ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Card } from 'react-bootstrap';\nimport useBlockchain from '../../hooks/useBlockchain';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nconst Withdrawal = () => {\n    const { getAccount } = useLocalStorage('');\n    const [contract, , , active] = useBlockchain('');\n    const [walletAddress, setWalletAddress] = useState('');\n    const [withdrawableBalance, setWithdrawableBalance] = useState(BigNumber.from('0'));\n\n    const accountID = getAccount();\n\n    useEffect(() => {\n        if (!active) return;\n        const fn = async () => {\n            const user = await contract.getUser(BigNumber.from(accountID));\n            setWalletAddress(user.addr);\n            const result = await contract.withdawable(BigNumber.from(accountID));\n            setWithdrawableBalance(result[0]);\n        };\n        fn();\n    }, [contract, getAccount, active, accountID]);\n\n    const withdraw = async () => {\n        await contract.withdraw(accountID)\n        window.alert('Sumitted')\n    }\n\n    function formatEther(amount) {\n        return parseFloat(ethers.utils.formatEther(amount)).toFixed(4);\n    }\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Make a Withdrawal</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Label>Available Balance</Form.Label>\n                                    <Form.Control type=\"text\" value={formatEther(withdrawableBalance)} onChange={e=>setWithdrawableBalance(e.target.value)} id=\"avalableBalance\" readOnly />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Wallet Address</Form.Label>\n                                    <Form.Control type=\"text\" value={walletAddress} onChange={e=>setWalletAddress(e.target.value)} id=\"walletAddress\" readOnly />\n                                </Form.Group>\n\n                                <input onClick={withdraw} type=\"button\" className=\"btn btn-primary btn-block mb-4\" value=\"Withdraw\" />\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Withdrawal;\n"],"sourceRoot":""}