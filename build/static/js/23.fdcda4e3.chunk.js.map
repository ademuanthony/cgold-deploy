{"version":3,"sources":["Main/Account/Transfer.js"],"names":["Transfer","getAccount","useLocalStorage","useBlockchain","contract","active","useState","BigNumber","from","presaleBalance","setPresaleBalance","receiverAddress","setReceiverAddress","amount","setAmount","useEffect","accountID","fn","getUser","user","addr","transfer","ethers","utils","parseEther","gt","window","alert","transferInternal","className","Header","Title","as","formatEther","Body","Group","id","Label","Control","value","onChange","e","target","type","placeholder","Text","onClick","variant"],"mappings":"uPAkEeA,UA5DE,WACb,IAAQC,EAAeC,cAAfD,WACR,EAA+BE,cAA/B,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CC,mBAASC,IAAUC,KAAK,MAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACN,GAAKV,EAAL,CACA,IAAMW,EAAYf,IACZgB,EAAE,iDAAG,gHACYb,EAASc,QAAQX,IAAUC,KAAKQ,IAD5C,cACDG,EADC,gBAEsBf,EAASK,eAAeU,EAAKC,MAFnD,OAEDX,EAFC,OAGPC,EAAkBD,GAHX,2CAAH,qDAKRQ,OACD,CAACb,EAAUH,EAAYI,IAE1B,IAAMgB,EAAQ,iDAAG,4FACTC,IAAOC,MAAMC,WAAWX,GAAQY,GAAGhB,GAD1B,uBAETiB,OAAOC,MAAM,wBAFJ,0CAKPvB,EAASwB,iBAAiBjB,EAAiBW,IAAOC,MAAMC,WAAWX,IAL5D,OAMba,OAAOC,MAAM,aANA,2CAAH,qDASd,OACI,mCACI,qBAAKE,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,eAAC,IAAKC,MAAN,CAAYC,GAAG,KAAf,+BACsB,uBAAMH,UAAU,sBAAhB,cAAwCP,IAAOC,MAAMU,YAAYxB,MAAwB,SAGnH,cAAC,IAAKyB,KAAN,UACI,eAAC,IAAD,WACI,eAAC,IAAKC,MAAN,CAAYC,GAAG,aAAf,UACI,cAAC,IAAKC,MAAN,uBACA,cAAC,IAAKC,QAAN,CAAcC,MAAO5B,EAAiB6B,SAAU,SAAAC,GAAC,OAAE7B,EAAmB6B,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,oCAC/G,cAAC,IAAKC,KAAN,CAAWhB,UAAU,aAArB,oDAGJ,eAAC,IAAKM,MAAN,CAAYC,GAAG,iBAAf,UACI,cAAC,IAAKC,MAAN,qBACA,cAAC,IAAKC,QAAN,CAAcC,MAAO1B,EAAQ2B,SAAU,SAAAC,GAAC,OAAE3B,EAAU2B,EAAEC,OAAOH,QAAQH,GAAG,iBAAiBO,KAAK,SAASC,YAAY,oBAGvH,cAAC,IAAD,CAAQE,QAASzB,EAAU0B,QAAQ,UAAnC","file":"static/js/23.fdcda4e3.chunk.js","sourcesContent":["import { BigNumber, ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport useBlockchain from '../../hooks/useBlockchain';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nconst Transfer = () => {\n    const { getAccount } = useLocalStorage();\n    const [contract, , , active] = useBlockchain();\n    const [presaleBalance, setPresaleBalance] = useState(BigNumber.from('0'));\n    const [receiverAddress, setReceiverAddress] = useState('')\n    const [amount, setAmount] = useState('');\n\n    useEffect(() => {\n        if (!active) return;\n        const accountID = getAccount();\n        const fn = async () => {\n            const user = await contract.getUser(BigNumber.from(accountID));\n            const presaleBalance = await contract.presaleBalance(user.addr);\n            setPresaleBalance(presaleBalance);\n        };\n        fn();\n    }, [contract, getAccount, active]);\n\n    const transfer = async () => {\n        if (ethers.utils.parseEther(amount).gt(presaleBalance)) {\n            window.alert('Insufficient balance');\n            return;\n        }\n        await contract.transferInternal(receiverAddress, ethers.utils.parseEther(amount));\n        window.alert('Submitted')\n    }\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Internal Transfer <span className=\"transPresaleBalance\">${ethers.utils.formatEther(presaleBalance)}</span>{' '}\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Form>\n                                <Form.Group id=\"receiverID\">\n                                    <Form.Label>Reciever</Form.Label>\n                                    <Form.Control value={receiverAddress} onChange={e=>setReceiverAddress(e.target.value)} type=\"text\" placeholder=\"Enter Reciever's Wallet Address\" />\n                                    <Form.Text className=\"text-muted\">Enter receiver's the wallet address</Form.Text>\n                                </Form.Group>\n\n                                <Form.Group id=\"formBasicEmail\">\n                                    <Form.Label>Amount</Form.Label>\n                                    <Form.Control value={amount} onChange={e=>setAmount(e.target.value)} id=\"addMultiAmount\" type=\"number\" placeholder=\"Enter Amount\" />\n                                </Form.Group>\n\n                                <Button onClick={transfer} variant=\"primary\">Send</Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Transfer;\n"],"sourceRoot":""}