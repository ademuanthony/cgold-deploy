{"version":3,"sources":["Main/Dashboard/Dashboard.js"],"names":["Dashboard","getAccount","useLocalStorage","useBlockchain","contract","connectedWallet","active","provider","useState","BigNumber","from","withdrawableBalance","setWithdrawableBalance","connectedWalletBalance","setConnectedWalletBalance","globalDownlines","setGlobalDownlines","downlines","setDownlines","importedBallance","setimportedBallance","classicCheckpoint","setClassicCheckpoint","premiumLevel","setPremiumLevel","importedReferralCount","setImportedReferralCount","accountID","upgradeToPremium","Math","random","window","alert","formatEther","amount","parseFloat","ethers","utils","toFixed","useEffect","contractAddress","fn","getUser","user","balanceOf","addr","bal","parseInt","outstandingBalance","withdawable","result","xl","md","Body","className","sm","id","href","role","onClick"],"mappings":"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","file":"static/js/26.532a7e27.chunk.js","sourcesContent":["import { BigNumber, ethers } from 'ethers';\nimport { filter } from 'jszip';\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport useBlockchain from '../../hooks/useBlockchain';\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport { contractAddress } from '../../web3/contracts';\n\nconst Dashboard = () => {\n    const { getAccount } = useLocalStorage();\n    const [contract, connectedWallet, active, provider] = useBlockchain();\n    const [withdrawableBalance, setWithdrawableBalance] = useState(BigNumber.from('0'));\n    const [connectedWalletBalance, setConnectedWalletBalance] = useState(BigNumber.from('0'));\n    // const [presaleBalance, setPresaleBalance] = useState(BigNumber.from('0'));\n    const [globalDownlines, setGlobalDownlines] = useState(0);\n    const [downlines, setDownlines] = useState(0);\n    const [importedBallance, setimportedBallance] = useState(BigNumber.from('0'));\n    const [classicCheckpoint, setClassicCheckpoint] = useState('');\n    const [premiumLevel, setPremiumLevel] = useState('');\n    const [importedReferralCount, setImportedReferralCount] = useState('');\n\n    const accountID = getAccount();\n\n    useEffect(() => {\n        if (!active) return;\n\n        window.contract = contract\n\n        const fn = async () => {\n            const user = await contract.getUser(BigNumber.from(accountID));\n            if (parseInt(user.addr) === 0) return;\n\n            const startBlock = 30655981;\n            const endBlock = await provider.getBlockNumber();\n            const eventFilter = contract.filters.Withdrawal(user.addr);\n            for (let i = startBlock; i <= endBlock; i += 4999) {\n                const _startBlock = i;\n                const _endBlock = Math.min(endBlock, i + 4999);\n                const events = await contract.queryFilter(eventFilter, _startBlock, _endBlock);\n                console.log(events);\n            }\n        };\n        // fn();\n    }, [contract, active, provider, contractAddress]);\n\n    useEffect(() => {\n        if (!active) return;\n        window.contract = contract;\n        const fn = async () => {\n            const user = await contract.getUser(BigNumber.from(accountID));\n            const bal = await contract.balanceOf(user.addr);\n            setConnectedWalletBalance(bal);\n\n            // const presaleBalance = await contract.presaleBalance(user.addr);\n\n            setGlobalDownlines(parseInt(user.globalDownlines));\n            setDownlines(parseInt(user.downlines));\n            setimportedBallance(user.outstandingBalance);\n            // setPresaleBalance(presaleBalance);\n\n            const result = await contract.withdawable(BigNumber.from(accountID));\n            setWithdrawableBalance(result[0]);\n\n            setClassicCheckpoint(parseInt(user.classicCheckpoint));\n            setPremiumLevel(parseInt(user.premiumLevel));\n\n            setImportedReferralCount(parseInt(user.importedReferralCount));\n        };\n        fn();\n    }, [\n        setConnectedWalletBalance,\n        contract,\n        accountID,\n        active,\n        connectedWallet,\n        setWithdrawableBalance,\n        setClassicCheckpoint,\n        setGlobalDownlines\n    ]);\n\n    function activateClassic() {\n        return;\n    }\n\n    async function upgradeToPremium() {\n        await contract.upgradeToPremium(BigNumber.from(accountID), Math.random())\n        window.alert('Submitted')\n    }\n\n    function formatEther(amount) {\n        return parseFloat(ethers.utils.formatEther(amount)).toFixed(4);\n    }\n\n    return (\n        <>\n            <Row>\n                <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={8}>\n                                    <h4 className=\"text-c-yellow\">\n                                        {formatEther(connectedWalletBalance)}\n                                        {/* {presaleBalance > 0 ? <small>({formatEther(presaleBalance)})</small> : ''} */}\n                                    </h4>\n                                    <h6 className=\"text-muted m-b-0\">Wallet Balance</h6>\n                                </Col>\n                                <Col sm={4} className=\"text-right\">\n                                    <i className=\"feather icon-bar-chart-2 text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={8}>\n                                    <h4 className=\"text-c-yellow\">${formatEther(withdrawableBalance)}</h4>\n                                    <h6 className=\"text-muted m-b-0\">Available Balance</h6>\n                                </Col>\n                                <Col sm={4} className=\"text-right\">\n                                    <i className=\"feather icon-bar-chart-2 text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={8}>\n                                    <h4 className=\"text-c-yellow\">${formatEther(importedBallance)}</h4>\n                                    <h6 className=\"text-muted m-b-0\">Imported Balance</h6>\n                                </Col>\n                                <Col sm={4} className=\"text-right\">\n                                    <i className=\"feather icon-bar-chart-2 text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                {/* <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={8}>\n                                    <h4 className=\"text-c-yellow\">${formatEther(withdrawableBalance)}</h4>\n                                    <h6 className=\"text-muted m-b-0\">Total Withdrawals</h6>\n                                </Col>\n                                <Col sm={4} className=\"text-right\">\n                                    <i className=\"feather icon-bar-chart-2 text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col> */}\n                <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={8}>\n                                    <h4 className=\"text-c-yellow\">{globalDownlines}</h4>\n                                    <h6 className=\"text-muted m-b-0\">Active Global Downlines</h6>\n                                </Col>\n                                <Col sm={4} className=\"text-right\">\n                                    <i className=\"feather icon-user text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"align-items-center\">\n                                <Col sm={10}>\n                                    <h4 className=\"text-c-yellow\">\n                                        {importedReferralCount + downlines}({importedReferralCount})\n                                    </h4>\n                                    <h6 className=\"text-muted m-b-0\">Direct Referral</h6>\n                                </Col>\n                                <Col sm={2} className=\"text-right\">\n                                    <i className=\"feather icon-user-check text-c-blue f-28\" />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row className=\"mb-2\">\n                <Col className={12}>\n                    Referral Link: <span id=\"myLink\">https://app.club250cent.com/auth/signup?ref={accountID}</span>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={12}>\n                    {premiumLevel > 0 ? (\n                        <div className=\"jumbotron\">\n                            <h1 className=\"display-4\">Congratulations!</h1>\n                            <p className=\"lead\">Your account is 100% active</p>\n                            <hr className=\"my-4\" />\n                            <p>Continue to build your team and grow your bank account. You are entitle to the unlimited world</p>\n                            <p className=\"lead\">\n                                <a className=\"btn btn-primary btn-lg\" href=\"/app/add-multiple-accounts\" role=\"button\">\n                                    Add Account\n                                </a>\n                            </p>\n                        </div>\n                    ) : classicCheckpoint > 0 ? (\n                        <div className=\"jumbotron\">\n                            <h1 className=\"display-4\">Congratulations on the journey so far!</h1>\n                            <p className=\"lead\">\n                                Your account is 50% active. Upgrade your account and become a premium member of Club250Cent\n                            </p>\n                            <hr className=\"my-4\" />\n                            <p>Embrace the world of ground-breaking earnings</p>\n                            <p className=\"lead\">\n                                <button className=\"btn btn-primary btn-lg\" onClick={upgradeToPremium}>\n                                    Upgrade Account\n                                </button>\n                            </p>\n                        </div>\n                    ) : (\n                        <div className=\"jumbotron\">\n                            <h1 className=\"display-4\">Hello, welcome to Club250Cent!</h1>\n                            <p className=\"lead\">Activate your account and become a classic member of Club250Cent</p>\n                            <hr className=\"my-4\" />\n                            <p>This is where the journey into your financial liberation will begins.</p>\n                            <p className=\"lead\">\n                                <button className=\"btn btn-primary btn-lg\" onClick={activateClassic}>\n                                    Activate Account\n                                </button>\n                            </p>\n                        </div>\n                    )}\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}