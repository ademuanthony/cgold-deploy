{"version":3,"sources":["Main/Account/AddMultiplaAccounts.js"],"names":["AddMultipleAccounts","getAccount","useLocalStorage","useBlockchain","contract","active","useState","uplineID","setUplineID","referralID","setReferralID","settingUplineID","setSettingUplineID","user","setUser","number","setNumber","useEffect","accountID","fn","getUser","BigNumber","from","addAccounts","window","confirm","console","log","addr","addAndActivateMultipleAccounts","alert","className","Header","Title","as","Body","Group","id","Control","value","onChange","e","target","type","placeholder","Label","Check","custom","el","checked","label","variant","onClick"],"mappings":"8OAoFeA,UA9Ea,WACxB,IAAQC,EAAeC,cAAfD,WACR,EAA+BE,cAA/B,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCC,mBAAS,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAwBN,qBAAxB,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACN,GAAKZ,EAAL,CACA,IAAMa,EAAYjB,IAClBS,EAAcQ,GACd,IAAMC,EAAE,iDAAG,8GACYf,EAASgB,QAAQC,IAAUC,KAAKJ,IAD5C,OACDL,EADC,OAEPC,EAAQD,GAFD,2CAAH,qDAIRM,OACD,CAACf,EAAUH,EAAYa,EAAST,IAEnC,IAAMkB,EAAW,iDAAG,+FACXC,OAAOC,QAAP,iBAAyBV,EAAzB,2BAAkDN,EAAlD,iFACLiB,QAAQC,IAAIlB,EAAYF,EAAUM,EAAKe,KAAMb,GAF7B,SAGVX,EAASyB,+BAA+BpB,EAAYF,EAAUM,EAAKe,KAAMb,GAH/D,OAIhBS,OAAOM,MAAM,aAJG,2CAAH,qDAOjB,OACI,mCACI,qBAAKC,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,CAAYC,GAAG,KAAf,qCAEJ,cAAC,IAAKC,KAAN,UACI,eAAC,IAAD,WACI,cAAC,IAAKC,MAAN,CAAYC,GAAG,iBAAf,SACI,cAAC,IAAKC,QAAN,CAAcC,MAAOxB,EAAQyB,SAAU,SAAAC,GAAC,OAAEzB,EAAUyB,EAAEC,OAAOH,QAAQI,KAAK,SAASC,YAAY,yBAGnG,eAAC,IAAKR,MAAN,CAAYC,GAAG,oBAAf,UACI,cAAC,IAAKQ,MAAN,0BACA,cAAC,IAAKP,QAAN,CAAcE,SAAU,SAAAC,GAAC,OAAEjC,EAAYiC,EAAEC,OAAOH,QAAQI,KAAK,OAAOJ,MAAO9B,OAG/E,cAAC,IAAK2B,MAAN,CAAYL,UAAU,YAAtB,SACQ,cAAC,IAAKe,MAAN,CACIC,QAAM,EACNR,MAAO5B,EACP6B,SAAU,SAACQ,GAAD,OAAQpC,EAAmBoC,EAAGN,OAAOO,UAC/CN,KAAK,WACLN,GAAG,qBACHa,MAAO,2BAIdvC,EACG,eAAC,IAAKyB,MAAN,CAAYC,GAAG,oBAAf,UACA,cAAC,IAAKQ,MAAN,+BACA,cAAC,IAAKP,QAAN,CAAcC,MAAOhC,EACbiC,SAAU,SAACQ,GAAD,OAAQxC,EAAYwC,EAAGN,OAAOH,QACxCI,KAAK,YAGb,GAGR,cAAC,IAAD,CAAQQ,QAAQ,UAAUC,QAAS7B,EAAnC","file":"static/js/19.0b8c7356.chunk.js","sourcesContent":["import { BigNumber } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport {Form, Button, Card } from 'react-bootstrap';\nimport useBlockchain from '../../hooks/useBlockchain';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nconst AddMultipleAccounts = () => {\n    const { getAccount } = useLocalStorage();\n    const [contract, , , active] = useBlockchain();\n    const [uplineID, setUplineID] = useState('0')\n    const [referralID, setReferralID] = useState('');\n    const [settingUplineID, setSettingUplineID] = useState(false);\n    const [user, setUser] = useState()\n    const [number, setNumber] = useState(1)\n\n    useEffect(() => {\n        if (!active) return;\n        const accountID = getAccount();\n        setReferralID(accountID);\n        const fn = async () => {\n            const user = await contract.getUser(BigNumber.from(accountID));\n            setUser(user);\n        };\n        fn();\n    }, [contract, getAccount, setUser, active]);\n\n    const addAccounts = async () => {\n        if (!window.confirm(`Adding ${number} accounts under ${referralID}. The activation fee will be deducted from your connected wallet. Continue?`))\n        console.log(referralID, uplineID, user.addr, number)\n        await contract.addAndActivateMultipleAccounts(referralID, uplineID, user.addr, number);\n        window.alert('Submitted')\n    }\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Add Multiple Accounts</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Form>\n                                <Form.Group id=\"formBasicEmail\">\n                                    <Form.Control value={number} onChange={e=>setNumber(e.target.value)} type=\"number\" placeholder=\"Number of Accounts\" />\n                                </Form.Group>\n\n                                <Form.Group id=\"formBasicPassword\">\n                                    <Form.Label>Referral ID</Form.Label>\n                                    <Form.Control onChange={e=>setUplineID(e.target.value)} type=\"text\" value={referralID} />\n                                </Form.Group>\n\n                                <Form.Group className=\"text-left\">\n                                        <Form.Check\n                                            custom\n                                            value={settingUplineID}\n                                            onChange={(el) => setSettingUplineID(el.target.checked)}\n                                            type=\"checkbox\"\n                                            id=\"supported-checkbox\"\n                                            label={'Set Matrix Upline ID'}\n                                        />\n                                    </Form.Group>\n\n                                    {settingUplineID ? (\n                                        <Form.Group id=\"formBasicPassword\">\n                                        <Form.Label>Matrix Upline ID</Form.Label>\n                                        <Form.Control value={uplineID}\n                                                onChange={(el) => setUplineID(el.target.value)}\n                                                type=\"text\"/>\n                                    </Form.Group>\n                                    ) : (\n                                        ''\n                                    )}\n\n                                <Button variant=\"primary\" onClick={addAccounts}>Submit</Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AddMultipleAccounts;\n"],"sourceRoot":""}