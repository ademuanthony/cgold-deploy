{"version":3,"sources":["App/layout/ScrollToTop/index.jsx","route.js","App/index.jsx","serviceWorker.js","store/store.js","web3/MetamaskProvider.jsx","index.jsx","store/actions.js","config.js","store/ableReducer.js","store/demoReducer.js","store/reducer.js","App/layout/Loader/index.jsx"],"names":["ScrollToTop","props","pathname","useLocation","useEffect","window","scrollTo","children","SignUp","React","Signin","Error","OfflineUI","route","path","exact","name","component","AdminLayout","lazy","App","location","ethereum","on","reload","fallback","Loader","routesOnePage","map","x","index","render","to","className","Boolean","hostname","match","store","createStore","reducer","injected","InjectedConnector","supportedChainIds","MetamaskProvider","useWeb3React","networkActive","active","networkError","error","activateNetwork","activate","useState","loaded","setLoaded","localStorage","getItem","isAuthorized","then","catch","app","basename","config","getLibrary","provider","Web3Provider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","COLLAPSE_MENU","COLLAPSE_TOGGLE","CHANGE_LAYOUT","CHANGE_SUB_LAYOUT","LAYOUT_TYPE","RESET","HEADER_BACK_COLOR","RTL_LAYOUT","NAV_FIXED_LAYOUT","HEADER_FIXED_LAYOUT","BOX_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","Config","defaultPath","layout","subLayout","collapseMenu","layoutType","headerBackColor","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","initialState","isOpen","isTrigger","ableReducer","state","action","trigger","open","type","actionTypes","menu","triggerIndex","indexOf","id","filter","item","allNames","demoReducer","concat","combineReducers","able","demo","useSelector","createSelectorHook","loader"],"mappings":"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","file":"static/js/main.f59c00b5.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nfunction ScrollToTop(props) {\r\n    const { pathname } = useLocation();\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n    return <>{props.children || null}</>;\r\n}\r\nexport default ScrollToTop;\r\n","import * as React from 'react';\r\nconst SignUp = React.lazy(() => import('./Main/Authentication/SignUp/SignUp'));\r\nconst Signin = React.lazy(() => import('./Main/Authentication/SignIn/SignIn'));\r\nconst Error = React.lazy(() => import('./Main/Maintenance/Error'));\r\nconst OfflineUI = React.lazy(() => import('./Main/Maintenance/OfflineUI'));\r\nconst ComingSoon = React.lazy(() => import('./Main/Maintenance/ComingSoon'));\r\nconst route = [\r\n    { path: '/auth/signup', exact: true, name: 'Signup', component: SignUp },\r\n    { path: '/auth/signin', exact: true, name: 'Signin', component: Signin },\r\n    { path: '/maintenance/error', exact: true, name: 'Error', component: Error },\r\n    { path: '/maintenance/coming-soon', exact: true, name: 'Coming Soon', component: ComingSoon },\r\n    { path: '/maintenance/offline-ui', exact: true, name: 'Offline UI', component: OfflineUI }\r\n];\r\nexport default route;","import * as React from 'react';\r\nimport { lazy, Suspense } from 'react';\r\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom';\r\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\r\nimport Loader from './layout/Loader';\r\nimport ScrollToTop from './layout/ScrollToTop';\r\nimport routesOnePage from '../route';\r\nconst AdminLayout = lazy(() => import('./layout/AdminLayout'));\r\n\r\nconst App = () => {\r\n    const location = useLocation();\r\n\r\n    if (window.ethereum) {\r\n        window.ethereum.on('accountsChanged', function () {\r\n            window.location.reload();\r\n        });\r\n\r\n        window.ethereum.on('chainChanged', function () {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ScrollToTop>\r\n                <Suspense fallback={<Loader />}>\r\n                    <Route path={routesOnePage.map((x) => x.path)}>\r\n                        <Switch location={location} key={location.pathname}>\r\n                            {routesOnePage.map((route, index) => {\r\n                                return route.component ? (\r\n                                    <Route\r\n                                        key={index}\r\n                                        path={route.path}\r\n                                        exact={route.exact}\r\n                                        render={(props) => <route.component {...props} />}\r\n                                    />\r\n                                ) : null;\r\n                            })}\r\n                        </Switch>\r\n                    </Route>\r\n\r\n                    <Route path={'/app'}>\r\n                        <AdminLayout />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/auth/signin\" />\r\n                    </Route>\r\n                </Suspense>\r\n            </ScrollToTop>\r\n            <div className=\"backdrop\" />\r\n        </>\r\n    );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then((registration) => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n            registration.unregister();\r\n        })\r\n            .catch((error) => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n}\r\n","// store without redux-tolkit.\r\nimport reducer from './reducer';\r\nimport { createStore } from 'redux';\r\nexport const store = createStore(reducer);\r\n/*\r\nimport { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n*/\r\n","import React, { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nconst injected = new InjectedConnector({\n  supportedChainIds: [97, 56],\n});\n\nfunction MetamaskProvider({ children }) {\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React()\n  const [loaded, setLoaded] = useState(false)\n  useEffect(() => {\n    // TODO: check other connectors\n    if(localStorage.getItem('connected') !== '1') {\n        setLoaded(true)\n        return\n    }\n    injected\n      .isAuthorized()\n      .then((isAuthorized) => {\n        setLoaded(true)\n        if (isAuthorized && !networkActive && !networkError) {\n          activateNetwork(injected)\n        }\n      })\n      .catch(() => {\n        setLoaded(true)\n      })\n  }, [activateNetwork, networkActive, networkError])\n  if (loaded) {\n    return children\n  }\n  return <>Loading</>\n}\n\nexport default MetamaskProvider","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App/index';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/store';\r\nimport config from './config';\r\nimport './assets/scss/style.scss';\r\n\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport MetamaskProvider from './web3/MetamaskProvider';\r\nfunction getLibrary(provider) {\r\n  return new Web3Provider(provider);\r\n}\r\n\r\nconst app = (<React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter basename={config.basename}>\r\n                <Web3ReactProvider getLibrary={getLibrary}>\r\n                    <MetamaskProvider><App /></MetamaskProvider>\r\n                </Web3ReactProvider>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>);\r\nReactDOM.render(app, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const COLLAPSE_MENU = '@able/COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = '@able/COLLAPSE_TOGGLE';\r\nexport const CHANGE_LAYOUT = '@able/CHANGE_LAYOUT';\r\nexport const CHANGE_SUB_LAYOUT = '@able/CHANGE_SUB_LAYOUT';\r\nexport const LAYOUT_TYPE = '@able/LAYOUT_TYPE';\r\nexport const RESET = '@able/RESET';\r\nexport const NAV_BRAND_COLOR = '@able/NAV_BRAND_COLOR';\r\nexport const HEADER_BACK_COLOR = '@able/HEADER_BACK_COLOR';\r\nexport const RTL_LAYOUT = '@able/RTL_LAYOUT';\r\nexport const NAV_FIXED_LAYOUT = '@able/NAV_FIXED_LAYOUT';\r\nexport const HEADER_FIXED_LAYOUT = '@able/HEADER_FIXED_LAYOUT';\r\nexport const BOX_LAYOUT = '@able/BOX_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = '@able/NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = '@able/NAV_COLLAPSE_LEAVE';\r\n","const Config = {\r\n    defaultPath: '/app',\r\n    basename: '',\r\n    layout: 'vertical',\r\n    subLayout: '',\r\n    collapseMenu: false,\r\n    layoutType: 'menu-light',\r\n    headerBackColor: 'header-blue',\r\n    rtlLayout: false,\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false,\r\n    boxLayout: false\r\n};\r\nexport default Config;\r\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\nexport const initialState = {\r\n    isOpen: [],\r\n    isTrigger: [],\r\n    ...config\r\n};\r\nconst ableReducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter((item) => item !== action.menu.id);\r\n                    trigger = trigger.filter((item) => item !== action.menu.id);\r\n                }\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            }\r\n            else {\r\n                open = state.isOpen;\r\n                const triggerIndex = state.isTrigger.indexOf(action.menu.id);\r\n                trigger = triggerIndex === -1 ? [action.menu.id] : [];\r\n                open = triggerIndex === -1 ? [action.menu.id] : [];\r\n            }\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter((item) => item !== action.menu.id);\r\n                    trigger = trigger.filter((item) => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger\r\n                };\r\n            }\r\n            return { ...state };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        case actionTypes.CHANGE_SUB_LAYOUT:\r\n            return {\r\n                ...state,\r\n                subLayout: action.subLayout\r\n            };\r\n        case actionTypes.LAYOUT_TYPE:\r\n            return {\r\n                ...state,\r\n                layoutType: action.layoutType,\r\n                headerBackColor: initialState.headerBackColor\r\n            };\r\n        case actionTypes.HEADER_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                headerBackColor: action.headerBackColor\r\n            };\r\n        case actionTypes.RTL_LAYOUT:\r\n            return {\r\n                ...state,\r\n                rtlLayout: !state.rtlLayout\r\n            };\r\n        case actionTypes.NAV_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                navFixedLayout: !state.navFixedLayout\r\n            };\r\n        case actionTypes.HEADER_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                headerFixedLayout: !state.headerFixedLayout,\r\n                headerBackColor: !state.headerFixedLayout && initialState.headerBackColor === 'header-default' ? 'header-blue' : state.headerBackColor\r\n            };\r\n        case actionTypes.BOX_LAYOUT:\r\n            return {\r\n                ...state,\r\n                boxLayout: !state.boxLayout\r\n            };\r\n        case actionTypes.RESET:\r\n            return {\r\n                ...state,\r\n                layout: initialState.layout,\r\n                subLayout: initialState.subLayout,\r\n                collapseMenu: initialState.collapseMenu,\r\n                layoutType: initialState.layoutType,\r\n                headerBackColor: initialState.headerBackColor,\r\n                rtlLayout: initialState.rtlLayout,\r\n                navFixedLayout: initialState.navFixedLayout,\r\n                headerFixedLayout: initialState.headerFixedLayout,\r\n                boxLayout: initialState.boxLayout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ableReducer;\r\n","export const initialState = {\r\n    allNames: []\r\n};\r\nconst demoReducer = (state = { ...initialState }, action) => {\r\n    switch (action.type) {\r\n        case 'DEMO':\r\n            return {\r\n                allNames: state.allNames.concat(action.name)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default demoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { createSelectorHook } from 'react-redux';\r\nimport ableReducer from './ableReducer';\r\nimport demoReducer from './demoReducer';\r\nconst reducer = combineReducers({\r\n    able: ableReducer,\r\n    demo: demoReducer\r\n});\r\nexport const useSelector = createSelectorHook();\r\nexport default reducer;\r\n","import * as React from 'react';\r\nconst loader = () => {\r\n    return (<div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>);\r\n};\r\nexport default loader;\r\n"],"sourceRoot":""}